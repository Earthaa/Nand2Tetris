@256
D=A
@SP
M=D
//call Sys.init 0
@SP
D=M
@R14
M=D
@61
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@51
D=D-1;JLT
@R14
M=M-1
@45
0;JMP
@R14
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1
@SP
D=M
@R14
M=D
@125
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@115
D=D-1;JLT
@R14
M=M-1
@109
0;JMP
@R14
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
// label WHILE
(WHILE)
// goto WHILE
@WHILE
0;JMP// function Main.fibonacci 0
(Main.fibonacci)
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@140
D=D-1;JLT
@R13
M=M+1
@134
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@170
D;JLT
@SP
A=M
M=0
@173
0;JMP
@SP
A=M
M=-1
@SP
M=M+1
// if-goto IF_TRUE
@SP
M=M-1
A=M
D=M
@IF_TRUE
D;JNE
// goto IF_FALSE
@IF_FALSE
0;JMP// label IF_TRUE
(IF_TRUE)
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@196
D=D-1;JLT
@R13
M=M+1
@190
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@FRAME
M=D
@FRAME
D=M
@R13
M=D
@5
D=A
@R13
M=M-1
@214
D=D-1;JGT
@R13
A=M
D=M
@RET
M=D
// pop argument 0
@SP
M=M-1
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@238
D=D-1;JLT
@R13
M=M+1
@232
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
@SP
M=D+1
@FRAME
D=M
@R13
M=D
@1
D=A
@R13
M=M-1
@254
D=D-1;JGT
@R13
A=M
D=M
@THAT
M=D
@FRAME
D=M
@R13
M=D
@2
D=A
@R13
M=M-1
@269
D=D-1;JGT
@R13
A=M
D=M
@THIS
M=D
@FRAME
D=M
@R13
M=D
@3
D=A
@R13
M=M-1
@284
D=D-1;JGT
@R13
A=M
D=M
@ARG
M=D
@FRAME
D=M
@R13
M=D
@4
D=A
@R13
M=M-1
@299
D=D-1;JGT
@R13
A=M
D=M
@LCL
M=D
@RET
A=M
0;JMP
// label IF_FALSE
(IF_FALSE)
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@324
D=D-1;JLT
@R13
M=M+1
@318
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//call Main.fibonacci 1
@SP
D=M
@R14
M=D
@406
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@396
D=D-1;JLT
@R14
M=M-1
@390
0;JMP
@R14
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@419
D=D-1;JLT
@R13
M=M+1
@413
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//call Main.fibonacci 1
@SP
D=M
@R14
M=D
@501
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@491
D=D-1;JLT
@R14
M=M-1
@485
0;JMP
@R14
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// return
@LCL
D=M
@FRAME
M=D
@FRAME
D=M
@R13
M=D
@5
D=A
@R13
M=M-1
@521
D=D-1;JGT
@R13
A=M
D=M
@RET
M=D
// pop argument 0
@SP
M=M-1
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@545
D=D-1;JLT
@R13
M=M+1
@539
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
@SP
M=D+1
@FRAME
D=M
@R13
M=D
@1
D=A
@R13
M=M-1
@561
D=D-1;JGT
@R13
A=M
D=M
@THAT
M=D
@FRAME
D=M
@R13
M=D
@2
D=A
@R13
M=M-1
@576
D=D-1;JGT
@R13
A=M
D=M
@THIS
M=D
@FRAME
D=M
@R13
M=D
@3
D=A
@R13
M=M-1
@591
D=D-1;JGT
@R13
A=M
D=M
@ARG
M=D
@FRAME
D=M
@R13
M=D
@4
D=A
@R13
M=M-1
@606
D=D-1;JGT
@R13
A=M
D=M
@LCL
M=D
@RET
A=M
0;JMP
