// function SimpleFunction.test 2
(SimpleFunction.test)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
A=M
D=A
@R13
M=D
@0
D=A
@27
D=D-1;JLT
@R13
M=M+1
@21
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
A=M
D=A
@R13
M=D
@1
D=A
@48
D=D-1;JLT
@R13
M=M+1
@42
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// not
@SP
M=M-1
A=M
M=!M
@SP
M=M+1
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@85
D=D-1;JLT
@R13
M=M+1
@79
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// push argument 1
@ARG
A=M
D=A
@R13
M=D
@1
D=A
@116
D=D-1;JLT
@R13
M=M+1
@110
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// return
@LCL
D=M
@FRAME
M=D
@FRAME
D=M
@R13
M=D
@5
D=A
@R13
M=M-1
@144
D=D-1;JGT
@R13
A=M
D=M
@RET
M=D
// pop argument 0
@SP
M=M-1
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@168
D=D-1;JLT
@R13
M=M+1
@162
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
@SP
M=D+1
@FRAME
D=M
@R13
M=D
@1
D=A
@R13
M=M-1
@184
D=D-1;JGT
@R13
A=M
D=M
@THAT
M=D
@FRAME
D=M
@R13
M=D
@2
D=A
@R13
M=M-1
@199
D=D-1;JGT
@R13
A=M
D=M
@THIS
M=D
@FRAME
D=M
@R13
M=D
@3
D=A
@R13
M=M-1
@214
D=D-1;JGT
@R13
A=M
D=M
@ARG
M=D
@FRAME
D=M
@R13
M=D
@4
D=A
@R13
M=M-1
@229
D=D-1;JGT
@R13
A=M
D=M
@LCL
M=D
@RET
A=M
0;JMP
