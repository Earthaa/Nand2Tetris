// push argument 1
@ARG
A=M
D=A
@R13
M=D
@1
D=A
@13
D=D-1;JLT
@R13
M=M+1
@7
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1           
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop that 0              
@SP
M=M-1
@THAT
A=M
D=A
@R13
M=D
@0
D=A
@50
D=D-1;JLT
@R13
M=M+1
@44
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop that 1              
@SP
M=M-1
@THAT
A=M
D=A
@R13
M=D
@1
D=A
@78
D=D-1;JLT
@R13
M=M+1
@72
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@97
D=D-1;JLT
@R13
M=M+1
@91
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// pop argument 0          
@SP
M=M-1
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@137
D=D-1;JLT
@R13
M=M+1
@131
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
// label MAIN_LOOP_START
(MAIN_LOOP_START)
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@156
D=D-1;JLT
@R13
M=M+1
@150
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto COMPUTE_ELEMENT 
@SP
M=M-1
A=M
D=M
@COMPUTE_ELEMENT
D;JNE
// goto END_PROGRAM        
@END_PROGRAM
0;JMP// label COMPUTE_ELEMENT
(COMPUTE_ELEMENT)
// push that 0
@THAT
A=M
D=A
@R13
M=D
@0
D=A
@185
D=D-1;JLT
@R13
M=M+1
@179
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push that 1
@THAT
A=M
D=A
@R13
M=D
@1
D=A
@206
D=D-1;JLT
@R13
M=M+1
@200
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// pop that 2              
@SP
M=M-1
@THAT
A=M
D=A
@R13
M=D
@2
D=A
@239
D=D-1;JLT
@R13
M=M+1
@233
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// pop pointer 1           
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// push argument 0
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@289
D=D-1;JLT
@R13
M=M+1
@283
0;JMP
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// pop argument 0          
@SP
M=M-1
@ARG
A=M
D=A
@R13
M=D
@0
D=A
@329
D=D-1;JLT
@R13
M=M+1
@323
0;JMP
@SP
A=M
D=M
@R13
A=M
M=D
// goto MAIN_LOOP_START
@MAIN_LOOP_START
0;JMP// label END_PROGRAM
(END_PROGRAM)
